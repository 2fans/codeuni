import pexpect
import sys

# Define connection variables
ip_address = '192.168.56.101'
username = 'tufan'
password = '123'
enable_password = '123'

# Start SSH session and auto-accept host key
session = pexpect.spawn(f"ssh -o StrictHostKeyChecking=no {username}@{ip_address}", encoding='utf-8', timeout=30)

# Step 1: Handle first-time SSH prompt or password
i = session.expect([
    'Are you sure you want to continue connecting',
    '[Pp]assword:',
    pexpect.TIMEOUT,
    pexpect.EOF
])
if i == 0:
    session.sendline('yes')
    i = session.expect(['[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if i != 1:
    print(f"--- FAILURE! creating session for: {ip_address}")
    sys.exit(1)

# Step 2: Send login password
session.sendline(password)
# Now expect user exec (>), privileged exec (#), or direct enable password prompt
i = session.expect(['>', '#', '[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if i == 0:
    # got '>' -> user exec, enter enable
    session.sendline('enable')
    session.expect('[Pp]assword:')
    session.sendline(enable_password)
    session.expect('#')
elif i == 1:
    # got '#' -> already privileged, do nothing
    pass
elif i == 2:
    # got direct password prompt -> assume enable
    session.sendline(enable_password)
    session.expect('#')
else:
    print('--- FAILURE! unexpected prompt after login')
    sys.exit(1)

# Step 3: Copy flash configuration to running-config
session.sendline('copy flash:CONFIG4 running-config')
# prompt for destination filename
session.expect('Destination filename')
# accept default
session.sendline('')
session.expect('#')
print('--- INFO: flash:CONFIG4 copied into running-config')

# Step 4: Enter global config mode
session.sendline('configure terminal')
session.expect('\(config\)#')

# Step 5: Change hostname to R1
session.sendline('hostname R1')
session.expect('R1\(config\)#')

# Step 6: Exit configuration and privileged EXEC modes
session.sendline('end')  # back to privileged exec
session.sendline('exit') # back to shell

# Step 7: Display success message
print('------------------------------------------------------')
print() 
print(f'--- Success! connecting to: {ip_address}')
print(f'---               Username: {username}')
print(f'---               Password: {password}')
print() 
print('------------------------------------------------------')

# Step 8: Close the SSH session
session.close()

