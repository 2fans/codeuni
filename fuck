import pexpect
import sys

# Device connection details
ip_address = '192.168.56.101'
username = 'tufan'
password = '123'
enable_password = '123'

# Start SSH session (auto accept host key)
ssh_command = f"ssh -o StrictHostKeyChecking=no {username}@{ip_address}"
session = pexpect.spawn(ssh_command, encoding='utf-8', timeout=20)

# 1. Expect password prompt
result = session.expect(['[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print(f"--- FAILURE: connecting to {ip_address}")
    sys.exit(1)

# 2. Send user password
session.sendline(password)
result = session.expect(['>', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print("--- FAILURE: after sending password")
    sys.exit(1)

# 3. Enter enable mode
session.sendline('enable')
result = session.expect(['[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print("--- FAILURE: entering enable mode")
    sys.exit(1)

# 4. Send enable password
session.sendline(enable_password)
result = session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print("--- FAILURE: enable password rejected")
    sys.exit(1)

# 5. Enter config mode
session.sendline('configure terminal')
result = session.expect(['\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print("--- FAILURE: entering config mode")
    sys.exit(1)

# 6. Change hostname to R1
session.sendline('hostname R1')
result = session.expect(['R1\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print("--- FAILURE: setting hostname")
    sys.exit(1)

# 7. Exit config and enable modes
session.sendline('exit')  # exit config mode
session.sendline('exit')  # exit privileged mode

# 8. Close SSH session
session.close()

print('--- SUCCESS: SSH to', ip_address, 'as', username)

