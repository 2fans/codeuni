import pexpect
import sys

# Define connection variables
ip_address = '192.168.56.101'
username = 'tufan'
password = '123'
enable_password = '123'

# Start the SSH session and auto-accept host key
session = pexpect.spawn(f"ssh {username}@{ip_address}", encoding='utf-8', timeout=20)

# Step 1: Expect password or first-time host key prompt
result = session.expect([
    'Are you sure you want to continue connecting',
    '[Pp]assword:',
    pexpect.TIMEOUT,
    pexpect.EOF
])
if result == 0:
    # Accept the new host key
    session.sendline('yes')
    result = session.expect(['[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if result != 1:
    print(f"--- FAILURE! creating session for: {ip_address}")
    sys.exit(1)

# Step 2: Send login password
session.sendline(password)
result = session.expect(['>', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print(f"--- FAILURE! entering password: {password}")
    sys.exit(1)

# Step 3: Enter privileged EXEC mode
session.sendline('enable')
result = session.expect(['[Pp]assword:', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- Failure! entering enable mode')
    sys.exit(1)

# Step 4: Send enable password
session.sendline(enable_password)
result = session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- Failure! entering enable mode after sending password')
    sys.exit(1)

# Step 5: Copy flash configuration to running-config
session.sendline('copy flash:CONFIG4 running-config')
result = session.expect(['Destination filename', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- FAILURE! copy flash prompt not found')
    sys.exit(1)
# Accept default filename
session.sendline('')
result = session.expect(['#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- FAILURE! copying flash config failed')
    sys.exit(1)
print('--- INFO: flash:CONFIG4 copied into running-config')

# Step 6: Enter configuration mode
session.sendline('configure terminal')
result = session.expect(['\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- Failure! entering config mode')
    sys.exit(1)

# Step 7: Change the hostname to R1
session.sendline('hostname R1')
result = session.expect(['R1\(config\)#', pexpect.TIMEOUT, pexpect.EOF])
if result != 0:
    print('--- Failure! setting hostname')
    sys.exit(1)

# Step 8: Exit configuration and privileged modes
session.sendline('exit')  # exit config mode
session.sendline('exit')  # exit privileged EXEC

# Step 9: Display success message
print('------------------------------------------------------')
print('')
print(f'--- Success! connecting to: {ip_address}')
print(f'---               Username: {username}')
print(f'---               Password: {password}')
print('')
print('------------------------------------------------------')

# Step 10: Close the SSH session
session.close()
