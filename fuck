from netmiko import ConnectHandler

# --- Device credentials ---
HOST = '192.168.56.101'
USERNAME = 'tufan'
PASSWORD = '123'

# --- Insecure connection via Telnet (Netmiko) ---
def telnet_connection():
    device_telnet = {
        'device_type': 'cisco_ios_telnet',
        'host': HOST,
        'username': USERNAME,
        'password': PASSWORD,
        'secret': PASSWORD,
    }
    net_connect = ConnectHandler(**device_telnet)
    print(f"[Telnet] Connected to {HOST}")

    # Elevate to privileged EXEC
    net_connect.enable()

    # Change hostname to tufan
    net_connect.send_config_set(['hostname tufan'])
    print("[Telnet] Hostname changed to tufan")

    # Retrieve running-config
    running_cfg = net_connect.send_command('show running-config')
    with open('telnet_running_config.txt', 'w') as f:
        f.write(running_cfg)
    print("[Telnet] Running config saved to telnet_running_config.txt")

    # Interactive CLI after automation
    print("[Telnet] Enter additional commands or type 'exit' to close.")
    while True:
        cmd = input(f"{HOST} (telnet)> ")
        if cmd.strip().lower() in ('exit', 'quit'):
            break
        output = net_connect.send_command(cmd)
        print(output)

    net_connect.disconnect()
    print("[Telnet] Connection closed")

# --- Secure connection via SSH ---
def ssh_connection():
    device_ssh = {
        'device_type': 'cisco_ios',
        'host': HOST,
        'username': USERNAME,
        'password': PASSWORD,
        'secret': PASSWORD,
    }
    net_connect = ConnectHandler(**device_ssh)
    print(f"[SSH] Connected to {HOST}")

    # Elevate to privileged EXEC
    net_connect.enable()

    # Change hostname to tufan
    net_connect.send_config_set(['hostname tufan'])
    print("[SSH] Hostname changed to tufan")

    # Retrieve running-config
    running_cfg = net_connect.send_command('show running-config')
    with open('ssh_running_config.txt', 'w') as f:
        f.write(running_cfg)
    print("[SSH] Running config saved to ssh_running_config.txt")

    # Interactive CLI after automation
    print("[SSH] Enter additional commands or type 'exit' to close.")
    while True:
        cmd = input(f"{HOST} (ssh)> ")
        if cmd.strip().lower() in ('exit', 'quit'):
            break
        output = net_connect.send_command(cmd)
        print(output)

    net_connect.disconnect()
    print("[SSH] Connection closed")

# --- Main execution ---
def main():
    print("Select connection method:")
    print("1) Telnet (insecure)")
    print("2) SSH   (secure)")
    choice = input("Enter 1 or 2: ")
    if choice == '1':
        telnet_connection()
    elif choice == '2':
        ssh_connection()
    else:
        print("Invalid choice. Use 1 or 2.")

if __name__ == '__main__':
    main()
